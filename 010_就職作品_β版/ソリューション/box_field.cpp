
//-===============================================
//-
//-	当たり判定地面処理[box_field.cpp]
//- Author Sakai Minato
//-
//-===============================================

//-======================================
//-	インクルード
//-======================================

#include "box_field.h"

#include "renderer.h"
#include "manager.h"

//-======================================
//-	マクロ定義
//-======================================

//=======================================
//=	コンスト定義
//=======================================

//-======================================
//-	静的変数宣言
//-======================================

//-------------------------------------
//-	3D地面のコンストラクタ
//-------------------------------------
CBoxField::CBoxField(int nPriority) : CObject3d(nPriority)
{

}

//-------------------------------------
//-	3D地面のデストラクタ
//-------------------------------------
CBoxField::~CBoxField()
{

}


//-------------------------------------
//- 3D地面の初期化処理（3Dオブジェクト設定）
//-------------------------------------
HRESULT CBoxField::Init(void)
{
	// 3Dオブジェクトの初期化
	CObject3d::Init();

	// 成功を返す
	return S_OK;
}

//-------------------------------------
//- 3D地面の終了処理
//-------------------------------------
void CBoxField::Uninit(void)
{
	// 3Dオブジェクトの終了
	CObject3d::Uninit();
}

//-------------------------------------
//- 3D地面の更新処理
//-------------------------------------
void CBoxField::Update(void)
{
	// 3Dオブジェクトの更新処理
	CObject3d::Update();
}

//-------------------------------------
//- 3D地面の描画処理
//-------------------------------------
void CBoxField::Draw(void)
{
	// 3Dオブジェクトの描画処理
	CObject3d::Draw();
}

//-------------------------------------
//- 3D地面の生成処理
//-------------------------------------
CBoxField* CBoxField::Create(void)
{
	// フィールドのポインタを宣言
	CBoxField* pCBoxField = DBG_NEW CBoxField(2);

	// 生成の成功の有無を判定
	if (pCBoxField != NULL)
	{
		// 初期化処理
		if (FAILED(pCBoxField->Init()))
		{// 失敗時

			// 「なし」を返す
			return NULL;
		}
	}
	else if (pCBoxField == NULL)
	{// 失敗時

		// 「なし」を返す
		return NULL;
	}

	// フィールドのポインタを返す
	return pCBoxField;
}