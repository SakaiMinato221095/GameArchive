
//-===============================================
//-
//-	モードステータス処理[state_mode.cpp]
//- Author Sakai Minato
//-
//-===============================================

//-======================================
//-	インクルード
//-======================================

#include "state_mode.h"

#include "renderer.h"
#include "manager.h"

//-======================================
//-	マクロ定義
//-======================================

//-======================================
//-	静的変数宣言
//-======================================

//-------------------------------------
//-	モードステータスのコンストラクタ
//-------------------------------------
CStateMode::CStateMode()
{
	// 値をクリア
	m_resultState = (RESULT_STATE)0;
}

//-------------------------------------
//-	モードステータスのデストラクタ
//-------------------------------------
CStateMode::~CStateMode()
{

}

//-------------------------------------
//- モードステータスの初期化処理
//-------------------------------------
void CStateMode::Init(void)
{
}

//-------------------------------------
//- モードステータスの終了処理
//-------------------------------------
void CStateMode::Uninit(void)
{

}

//-------------------------------------
//- モードステータスのリザルト状態のリセット
//-------------------------------------
void CStateMode::ResetResultState(void)
{
	m_resultState = (RESULT_STATE)0;
}

//-------------------------------------
//- モードステータスの生成処理
//-------------------------------------
CStateMode *CStateMode::Create(void)
{
	// アイテムのポインタを宣言
	CStateMode *pCStateMode = DBG_NEW CStateMode;

	// 生成の成功の有無を判定
	if (pCStateMode != NULL)
	{
		// 初期化処理
		pCStateMode->Init();
	}
	else if (pCStateMode == NULL)
	{// 失敗時

	 // 「なし」を返す
		return NULL;
	}

	// アイテムのポインタを返す
	return pCStateMode;
}

//-------------------------------------
//- モードステータスのリザルト状態の設定処理
//-------------------------------------
void CStateMode::SetResultState(RESULT_STATE resultState)
{
	// リザルト状態の情報を代入
	m_resultState = resultState;
}

//-------------------------------------
//- モードステータスのリザルト状態の取得処理
//-------------------------------------
CStateMode::RESULT_STATE CStateMode::GetResultState(void)
{
	// リザルト状態の情報を返す
	return m_resultState;
}
